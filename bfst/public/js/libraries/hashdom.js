(()=>{var t={12:(t,e,o)=>{"use strict";o.r(e),o.d(e,{HashDOM:()=>r});class r extends Array{ready(t){if(this.some((t=>null!==t.readyState&&"loading"!==t.readyState)))return t();this.on("DOMContentLoaded",t)}on(t,e,o){return"function"==typeof e?(this.forEach((o=>{o.addEventListener(t,e)})),this):(this.forEach((r=>{r.addEventListener(t,(t=>{t.target.matches(e)&&o(t)}))})),this)}}},338:(t,e,o)=>{const{HashDOM:r}=o(12);r.prototype.addClass=function(t){return this.forEach((e=>{e.classList.add(t)})),this},r.prototype.removeClass=function(t){return this.forEach((e=>{e.classList.remove(t)})),this},r.prototype.css=function(t,e){return this.forEach((o=>{o.style[t]=e})),this}},966:(t,e,o)=>{const{HashDOM:r}=o(12);r.prototype.html=function(t){return this.forEach((e=>{e.innerHTML=t})),this},r.prototype.append=function(t){return this.forEach((e=>{e.innerHTML=e.innerHTML+t})),this},r.prototype.prepend=function(t){return this.forEach((e=>{e.innerHTML=t+e.innerHTML})),this}}},e={};function o(r){var n=e[r];if(void 0!==n)return n.exports;var i=e[r]={exports:{}};return t[r](i,i.exports,o),i.exports}o.d=(t,e)=>{for(var r in e)o.o(e,r)&&!o.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{"use strict";var t=o(12);o(966),o(338);void 0===window.$&&(window.$={}),t.HashDOM.prototype.ajax=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return fetch(t,e)},t.HashDOM.prototype.get=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.ajax(t,{method:"GET",...e})},t.HashDOM.prototype.post=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.ajax(t,{method:"POST",...e})},window.$.ajax=t.HashDOM.prototype.ajax,void 0===window.$&&(window.$={}),window.hash=e=>"string"==typeof e||e instanceof String?new t.HashDOM(...document.querySelectorAll(e)):new t.HashDOM(e)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,